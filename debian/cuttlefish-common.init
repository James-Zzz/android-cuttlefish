#!/bin/sh
#
### BEGIN INIT INFO
# Provides: cuttlefish-common
# Required-Start: $network $remote_fs
# Required-Stop: $network $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Set up initial cuttlefish environment
# Description: This script sets up the initial cuttlefist environment,
#              optionally booting a default cuttlefish release.
### END INIT INFO
#
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Make sure calls to this script get redirected to systemctl when
# using systemd

. /lib/lsb/init-functions

num_cvd_accounts=8

create_interface() {
    tap="$(printf cvd-${1}tap-%02d $2)"
    gateway="${3}.$((4*$2 - 3))"
    network="${3}.$((4*$2 - 4))/30"
    netmask="255.255.255.252"
    dhcp_range="${3}.$((4*$2 - 2)),${3}.$((4*$2 - 2))"
    ip tuntap add dev "${tap}" mode tap group cvdnetwork
    ip -4 addr add ${gateway}/30 broadcast + dev "${tap}"
    ip link set dev ${tap} up

    /sbin/iptables -t nat -A POSTROUTING -s "${network}" -j MASQUERADE

    /usr/sbin/dnsmasq \
    --strict-order \
    --except-interface=lo \
    --interface="${tap}" \
    --listen-address="${gateway}" \
    --bind-interfaces \
    --dhcp-range="${dhcp_range}" \
    --conf-file="" \
    --pid-file=/var/run/cuttlefish-dnsmasq-"${tap}".pid \
    --dhcp-leasefile=/var/run/cuttlefish-dnsmasq-"${tap}".leases \
    --dhcp-no-override
}

create_interfaces(){
    create_interface w $1 192.168.96
    create_interface m $1 192.168.97
}

destroy_interface() {
    tap="$(printf cvd-${1}tap-%02d $2)"
    network="${3}.$((4*$2 - 4))/30"

    if [ -f /var/run/cuttlefish-dnsmasq-"${tap}".pid ]; then
        kill $(cat /var/run/cuttlefish-dnsmasq-"${tap}".pid)
    fi

    iptables -t nat -D POSTROUTING -s "${network}" -j MASQUERADE
    ip link set dev "${tap}" down
    ip link delete "${tap}"
}

destroy_interfaces(){
    # Use wtap/wbr and mtap/mbr for wifi and mobile network respectively to
    # avoid going over the interface name size limit
    destroy_interface w $1 192.168.96
    destroy_interface m $1 192.168.97
}


start() {
    # This has to be expressed in very basic shell syntax, so we can't
    # use the typical array idiom.
    for i in /sys/devices/platform/vhci_hcd/attach \
      /sys/devices/platform/vhci_hcd/detach; do
      if [ -f $i ]; then
        USB_FILES="${USB_FILES} ${i}"
      fi
    done
    # Enable ip forwarding
    echo 1 >/proc/sys/net/ipv4/ip_forward
    for i in $(seq ${num_cvd_accounts}); do
      create_interfaces $i
    done
}

stop() {
    for i in $(seq ${num_cvd_accounts}); do
      destroy_interfaces $i
    done
}

usage() {
  echo $0: start\|stop
}

if test $# != 1; then
    usage
fi
case "$1" in
    --help)
        usage 0
        ;;
    start|stop)
        "$1"
        ;;
    restart)
        stop && start
        ;;
    condrestart|try-restart)
        stop && start
        ;;
    reload|force-reload)
        # Nothing to do; we reread configuration on each invocation
        ;;
    status)
        rh_status
        ;;
    shutdown)
        stop
        ;;
    *)
        usage
        ;;
esac
exit $RETVAL
